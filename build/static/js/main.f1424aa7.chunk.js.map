{"version":3,"sources":["dictionary/search/SearchPanel.js","dictionary/search/RecordsBlock.js","dictionary/search/Record.js","dictionary/search/PaginationPanel.js","dictionary/search/SearcList.js","dictionary/term/TermInfo.js","dictionary/term/DictionaryRecord.js","base/Preloader.js","dictionary/Dictionary.js","base/constant.js","base/StyleSelector.js","base/DictionarySelector.js","base/Base.js","styles/narkam.js","styles/lacink.js","styles/tarask.js","store/store.js","index.js"],"names":["replaceBelByEng","input","toLowerCase","replace","SearchPanel","props","_useState","useState","filterValue","_useState2","Object","slicedToArray","inputValue","setInputValue","labels","useSelector","state","react_default","a","createElement","className","type","onChange","event","target","value","onFilterChange","placeholder","input_eng_term","RecordsBlock","startIndex","currentPage","countPerPage","endIndex","filteredGlosses","slice","map","item","setSelectedItem","key","onClick","Record","setSelectedItemId","PaginationPanel","pagesCount","Math","floor","length","disabled","setCurrentPage","pg","z","SearchList","search_SearchPanel","RecordsBlock_RecordsBlock","filteredTerms","PaginationPanel_PaginationPanel","updatePage","TermInfo","location","useLocation","dispatch","useDispatch","queryParams","URLSearchParams","search","style","urlDictionaries","get","storeDictionaries","dictionaries","termsMap","unionMap","term","relations","filter","relation","indexOf","dictionaryId","filteredRelations","setFilteredRelations","useEffect","forEach","getText","termId","find","element","id","information","fetch","then","response","json","jsonData","found","dictionary","recordId","text","DictionaryRecord","resetSelectedItem","back","Preloader","Dictionary","terms","setFilteredTerms","navigate","useNavigate","_useState3","undefined","_useState4","loading","setLoading","page","_useState5","_useState6","_useState7","_useState8","setFilterValue","_useState9","_useState10","selectedItemId","_useState11","_useState12","setSelectedItemRelations","stopLoading","filterTerms","allTerms","filtered","_i","_Object$entries","entries","_ref3","_ref2","console","log","hasDictionary","push","array","dictionaryIds","index","setTimeout","filterGlosses","concat","pathname","_step","_iterator","_createForOfIteratorHelper","s","n","done","_ref6","_ref5","fil","includes","dic","err","e","f","src_base_Preloader","SearcList","dictionary_term_TermInfo","TARASK_TAG","NARKAM_TAG","LACINK_TAG","StyleSelector","newStyle","newLocation","constants","name","checked","tarask","narkam","lacink","DictionarySelector","newDictionaries","changeDictionary","Base","initStyle","substring","StyleSelector_StyleSelector","react_router","path","dictionary_Dictionary","to","NARKAM","title","glossary","rules","links","wrong_usage","comment","LACINK","TARASK","styleGuideMap","Map","linksMap","store","createStore","arguments","ruleGroups","linkGroups","action","set","keys","hasOwnProperty","ReactDOM","render","react_router_dom","es","base_Base","document","getElementById"],"mappings":"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","file":"static/js/main.f1424aa7.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './SearchPanel.css';\nimport {useSelector} from \"react-redux\";\n\n\nconst replaceBelByEng = input =>{\n    return input\n        .toLowerCase()\n        .replace('й','q')\n        .replace('ц','w')\n        .replace('у','e')\n        .replace('к','r')\n        .replace('е','t')\n        .replace('н','y')\n        .replace('г','u')\n        .replace('ш','i')\n        .replace('ў','o')\n        .replace('з','p')\n        .replace('х','[')\n        .replace('ф','a')\n        .replace('ы','s')\n        .replace('в','d')\n        .replace('а','f')\n        .replace('п','g')\n        .replace('р','h')\n        .replace('о','j')\n        .replace('л','k')\n        .replace('д','l')\n        .replace('ж',';')\n        .replace('я','z')\n        .replace('ч','x')\n        .replace('с','c')\n        .replace('м','v')\n        .replace('і','b')\n        .replace('т','n')\n        .replace('ь','m');\n};\n\n\n\nfunction SearchPanel(props) {\n    const [inputValue, setInputValue] = useState(props.filterValue);\n    const labels = useSelector(state => state.labels);\n\n    const checkAndChange = event=>{\n        let input = event.target.value;\n        input = replaceBelByEng(input);\n        setInputValue(input);\n        props.onFilterChange(input);\n    };\n\n  return (\n    <div className=\"filter\">\n      <input type=\"text\" onChange={checkAndChange} value={inputValue} placeholder={labels.input_eng_term} />\n    </div>\n  );\n}\n\nexport default SearchPanel;\n\n\n","import {Record} from './Record';\nimport './RecordsBlock.css';\nimport React from \"react\";\n\nexport function RecordsBlock(props) {\n\n    const startIndex = (props.currentPage - 1) * props.countPerPage;\n    const endIndex = startIndex + props.countPerPage;\n\n    return (\n        <div className=\"records\">\n            {props.filteredGlosses.slice(startIndex, endIndex).map((item) => Record(item, props.setSelectedItemId))}\n        </div>\n    )\n        ;\n}","import React from 'react';\nimport './Record.css';\n\nexport function Record(item, setSelectedItem) {\n    return (\n        <div className='record'\n\n             key={item}>\n            <button onClick={() => setSelectedItem(item)} className=\"record-info\">\n                <div className=\"text-wrapper\">\n                    {item}\n                </div>\n            </button>\n        </div>\n    );\n}","import React from 'react';\nimport './PaginationPanel.css';\nimport {useSelector} from \"react-redux\";\n\nexport function PaginationPanel(props) {\n  const labels = useSelector(state => state.labels);\n\n  const pagesCount = Math.floor(props.filteredGlosses.length / props.countPerPage)\n    + (props.filteredGlosses.length % props.countPerPage > 0 ? 1 : 0);\n\n  return (\n    <div className=\"pagination-panel\">\n      <div className=\"pagination-card\">\n        <button className=\"pagination-button\"\n                disabled={props.currentPage === 1}\n                onClick={() => props.setCurrentPage(props.currentPage - 1)}>\n          ←\n        </button>\n        <div className=\"pagination-text\">\n          {labels.pg + props.currentPage + labels.z + pagesCount}\n        </div>\n        <button className=\"pagination-button\"\n                disabled={props.currentPage === pagesCount}\n                onClick={() => props.setCurrentPage(props.currentPage + 1)}>\n          →\n        </button>\n      </div>\n    </div>\n  );\n}","import SearchPanel from \"./SearchPanel\";\nimport {RecordsBlock} from \"./RecordsBlock\";\nimport {PaginationPanel} from \"./PaginationPanel\";\nimport React from \"react\";\n\nconst SearchList = (props)=>{\n    return <div className=\"tab-content\">\n        <SearchPanel onFilterChange={props.onFilterChange}\n                     filterValue={props.filterValue}/>\n        <RecordsBlock filteredGlosses={props.filteredTerms}\n                      countPerPage={props.countPerPage}\n                      currentPage={props.currentPage}\n                      setSelectedItemId={props.setSelectedItemId}/>\n        <PaginationPanel filteredGlosses={props.filteredTerms}\n                         countPerPage={props.countPerPage}\n                         currentPage={props.currentPage}\n                         setCurrentPage={props.updatePage}/>\n    </div>;\n};\n\nexport default SearchList;","import React, {useEffect, useState} from \"react\";\nimport \"./TermInfo.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DictionaryRecord} from \"./DictionaryRecord\";\nimport {useLocation} from \"react-router-dom\";\n\nconst TermInfo = (props) => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n\n    const queryParams = new URLSearchParams(location.search);\n\n    const style = useSelector(state => state.style);\n\n\n    const urlDictionaries = queryParams.get('dictionaries') === null ? 'abc' : queryParams.get('dictionaries');\n    const storeDictionaries = useSelector(state => state.dictionaries);\n    const dictionaries = storeDictionaries ? storeDictionaries : urlDictionaries;\n\n    const labels = useSelector(state => state.labels);\n    const termsMap = useSelector(state => state.termsMap);\n    const unionMap = useSelector(state => state.unionMap);\n    const term = queryParams.get('termId') === null ? null : queryParams.get('termId');\n    const relations = unionMap.get(term) === null ? [] : unionMap.get(term);\n\n    const [filteredRelations, setFilteredRelations] = useState(relations.filter(relation => dictionaries.indexOf(relation.dictionaryId) > -1));\n\n    useEffect(() => {\n        setFilteredRelations(relations.filter(relation => dictionaries.indexOf(relation.dictionaryId) > -1));\n    }, [dictionaries]);\n\n    useEffect(() => {\n        filteredRelations.forEach(relation => getText(relation.dictionaryId, relation.termId, style));\n    }, []);\n\n\n    const getText = (dictionaryId, termId, style) => {\n        const key = dictionaryId + style;\n        if (termsMap.get(key)) {\n            const found = termsMap.get(key).find(element => element.id === termId);\n            return found.information;\n        } else {\n            fetch('https://raw.githubusercontent.com/Heorhi-Puhachou/dictionary-converter/main/generated/' + dictionaryId + '/' + style + '.json')\n                .then(response => response.json())\n                .then(jsonData => {\n                    dispatch({type: 'addTermsForStyleAndDictionary', key: key, json: jsonData});\n                    const found = jsonData.find(element => element.id === termId);\n                    setFilteredRelations(relations.filter(relation => dictionaries.indexOf(relation.dictionaryId) > -1));\n                    return found.information;\n                });\n        }\n    }\n\n\n    return (\n        <div className=\"tab-content\">\n            <div className=\"term-stub-panel\"/>\n            <div className=\"term-info-panel\">\n                <div>\n                    <h2 className=\"headertekst\">{term}</h2>\n                </div>\n                <div className=\"records\">\n                    {filteredRelations.map((item) => DictionaryRecord(item.dictionaryId, item.termId, getText(item.dictionaryId, item.termId, style)))}\n                </div>\n            </div>\n\n\n            < div className=\"term-button-panel\">\n                <button className='term-back-button' onClick={() => props.resetSelectedItem()}>{labels.back}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TermInfo;","import React from 'react';\nimport './DictionaryRecord.css';\n\nexport function DictionaryRecord(dictionary, recordId, text) {\n\n    const getDictionaryName = (dictionaryId) => {\n        if(dictionaryId==='a'){\n            return 'Гласарый перакладчыкаў Ubuntu';\n        }\n        if(dictionaryId==='b'){\n            return 'Proton Terms by Košal&Turok';\n        }\n        if(dictionaryId==='c'){\n            return 'Test dictionary'\n        }\n    }\n\n    return (<div className='dictionary-record'\n                 key={recordId}>\n        <div className=\"dictionary-record-info\">\n            <div className=\"dictionary-text-wrapper\">\n                {text + '\\n\\n© '+getDictionaryName(dictionary)}\n            </div>\n        </div>\n    </div>);\n}","import \"./Preloader.css\";\nimport React from \"react\";\n\nconst Preloader = () => {\n    return <div className=\"tab-content\">\n        <div className=\"vertical-center\">\n        <div className=\"preloader\"></div>\n        </div>\n    </div>;\n};\n\nexport default Preloader;","import React, {useEffect, useState} from 'react';\nimport './Dictionary.css';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport SearchList from \"./search/SearcList\";\nimport TermInfo from \"./term/TermInfo\";\nimport Preloader from \"../base/Preloader\";\n\n\nfunction Dictionary() {\n\n    const dictionaries = useSelector(state => state.dictionaries);\n    const terms = useSelector(state => state.terms);\n    const unionMap = useSelector(state => state.unionMap);\n    const dispatch = useDispatch();\n\n\n    const countPerPage = 4;\n    const [filteredTerms, setFilteredTerms] = useState([]);\n\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [loading, setLoading] = useState(terms === undefined || terms.length === 0);\n\n    const queryParams = new URLSearchParams(location.search);\n    const filter = queryParams.get('filter') === null ? '' : queryParams.get('filter');\n    const page = queryParams.get('page') === null ? 1 : +queryParams.get('page');\n    const termId = queryParams.get('termId') === null ? null : +queryParams.get('termId');\n\n    const [currentPage, setCurrentPage] = useState(page);\n    const [filterValue, setFilterValue] = useState(filter);\n    const [selectedItemId, setSelectedItemId] = useState(termId);\n    const [selectedItemRelations, setSelectedItemRelations] = useState(unionMap.get(termId));\n\n    const stopLoading = () => {\n        setLoading(false);\n    };\n\n    const filterTerms = (allTerms) => {\n        let filtered = [];\n        for (const [key, value] of Object.entries(allTerms)) {\n            console.log(key, value);\n            if(hasDictionary(value, dictionaries)){\n                filtered.push(key);\n            }\n        }\n        return filtered;\n    };\n\n    const hasDictionary = (array, dictionaryIds) => {\n        for (let index = 0; index < array.length; index++) {\n            if (dictionaryIds.indexOf(array[index].dictionaryId)>-1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    useEffect(() => {\n        if (loading) {\n            fetch('https://raw.githubusercontent.com/Heorhi-Puhachou/dictionary-converter/main/generated/union.json')\n                .then(response => response.json())\n                .then(jsonData => {\n                    dispatch({type: 'addUnionMap', unionMap: jsonData});\n                    setFilteredTerms(filterTerms(jsonData));\n                    setTimeout(stopLoading, 500);\n                });\n        } else {\n            setFilteredTerms(filterTerms(terms));\n            setTimeout(stopLoading, 500);\n        }\n    }, []);\n\n\n\n    useEffect(() => {\n        filterGlosses(filterValue);\n    }, [terms]);\n\n    useEffect(() => {\n        filterGlosses(filterValue);\n    }, [dictionaries]);\n\n    const updatePage = (page) => {\n        setCurrentPage(page);\n        navigate(`${location.pathname}?filter=${filterValue}&page=${page}&dictionaries=${dictionaries}`);\n    };\n\n    const resetCurrentPage = () => {\n        updatePage(1);\n    };\n\n    const filterGlosses = filterValue => {\n        let filtered = [];\n        if (unionMap) {\n            for (let [key, value] of unionMap) {\n                const fil = key.toLowerCase().includes(filterValue.toLowerCase());\n                const dic = hasDictionary(value, dictionaries);\n                if (fil && dic) {\n                    filtered.push(key);\n                }\n            }\n        }\n        setFilteredTerms(filtered);\n    };\n\n    const onFilterChange = value => {\n        filterGlosses(value);\n        resetCurrentPage();\n        setFilterValue(value);\n        navigate(`${location.pathname}?filter=${value}&page=1&dictionaries=${dictionaries}`);\n    };\n\n    const resetSelectedItem = () => {\n        setSelectedItemId(null);\n        setSelectedItemRelations(null);\n        navigate(`${location.pathname}?filter=${filter}&page=${page}&dictionaries=${dictionaries}`);\n    };\n\n    const onItemSelect = (id) => {\n        setSelectedItemId(id);\n        setSelectedItemRelations(unionMap.get(id));\n        navigate(`${location.pathname}?termId=${id}&dictionaries=${dictionaries}`);\n    };\n\n    if (loading) {\n        return <Preloader/>;\n    }\n    if (selectedItemId === null) {\n        return <SearchList onFilterChange={onFilterChange}\n                           filterValue={filterValue}\n                           setSelectedItemId={onItemSelect}\n                           filteredTerms={filteredTerms}\n                           countPerPage={countPerPage}\n                           currentPage={currentPage}\n                           updatePage={updatePage}/>\n    } else {\n        return <TermInfo\n            termId={selectedItemId}\n            resetSelectedItem={resetSelectedItem}/>;\n    }\n}\n\nexport default Dictionary;","export const TARASK_TAG = 'tarask';\nexport const NARKAM_TAG = 'narkam';\nexport const LACINK_TAG = 'lacink';\n\n","import React from 'react';\nimport * as constants from './constant';\nimport './StyleSelector.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nexport function StyleSelector() {\n\n    const style = useSelector(state => state.style);\n    const labels = useSelector(state => state.labels);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n\n    const onChangeStyle = (event) => {\n        const newStyle = event.target.value;\n        const currentPath = location.pathname;\n        const newLocation = currentPath.replace(style, newStyle) + location.search;\n        navigate(newLocation);\n        dispatch({type: newStyle});\n    };\n\n    return (\n        <div className=\"style-selector\" onChange={onChangeStyle}>\n            <input type=\"radio\"\n                   value={constants.TARASK_TAG}\n                   name=\"style\"\n                   checked={style === constants.TARASK_TAG}\n                   onChange={() => {\n                   }}/>{labels.tarask}\n            <input type=\"radio\"\n                   value={constants.NARKAM_TAG}\n                   name=\"style\"\n                   checked={style === constants.NARKAM_TAG}\n                   onChange={() => {\n                   }}/>{labels.narkam}\n            <input type=\"radio\"\n                   value={constants.LACINK_TAG}\n                   name=\"style\"\n                   checked={style === constants.LACINK_TAG}\n                   onChange={() => {\n                   }}/>{labels.lacink}\n        </div>\n    );\n}","import React from 'react';\nimport * as constants from './constant';\nimport './StyleSelector.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nexport function DictionarySelector() {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const queryParams = new URLSearchParams(location.search);\n    const urlDictionaries = queryParams.get('dictionaries') === null ? 'abc' : queryParams.get('dictionaries');\n    const storeDictionaries = useSelector(state => state.dictionaries);\n\n\n    const onChangeDictionary = (event) => {\n        const changeDictionary = event.target.value;\n\n        let newDictionaries;\n\n        if (urlDictionaries.includes(changeDictionary)) {\n            newDictionaries = urlDictionaries.replace(changeDictionary, '');\n        } else {\n            newDictionaries = urlDictionaries + changeDictionary;\n        }\n\n        let newLocation;\n        if (location.search) {\n            newLocation = location.pathname + location.search.replace('dictionaries=' + urlDictionaries, 'dictionaries=' + newDictionaries);\n        } else {\n            newLocation = location.pathname + '?dictionaries=' + newDictionaries;\n        }\n        navigate(newLocation);\n\n        dispatch({type: 'setDictionaries', dictionaries: newDictionaries});\n    };\n\n    return (\n        <div className=\"style-selector\" onChange={onChangeDictionary}>\n            <input type=\"checkbox\"\n                   value='a'\n                   name=\"dictionary\"\n                   checked={storeDictionaries.includes('a')}\n                   onChange={() => {\n                   }}/>{'a'}\n            <input type=\"checkbox\"\n                   value='b'\n                   name=\"dictionary\"\n                   checked={storeDictionaries.includes('b')}\n                   onChange={() => {\n                   }}/>{'b'}\n            <input type=\"checkbox\"\n                   value='c'\n                   name=\"dictionary\"\n                   checked={storeDictionaries.includes('c')}\n                   onChange={() => {\n                   }}/>{'c'}\n        </div>\n    );\n}","import Dictionary from '../dictionary/Dictionary';\nimport './Base.css';\nimport {Navigate, Route, Routes, useLocation} from \"react-router-dom\";\nimport React, {useEffect} from 'react';\nimport {LACINK_TAG, NARKAM_TAG, TARASK_TAG} from './constant';\nimport {StyleSelector} from './StyleSelector';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DictionarySelector} from \"./DictionarySelector\";\n\nfunction Base() {\n\n    const style = useSelector(state => state.style);\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        //http://localhost:3000/narkam\n        //                      narkam - location.pathname.substring(1, 7)\n        let initStyle = location.pathname.length > 6 ? location.pathname.substring(1, 7) : '';\n        if (initStyle === NARKAM_TAG) {\n            dispatch({type: NARKAM_TAG});\n        }\n        if (initStyle === LACINK_TAG) {\n            dispatch({type: LACINK_TAG});\n        }\n        if (initStyle === TARASK_TAG) {\n            dispatch({type: TARASK_TAG});\n        }\n\n        const queryParams = new URLSearchParams(location.search);\n        const dictionaries = queryParams.get('dictionaries') === null ? 'abc' : queryParams.get('dictionaries');\n        dispatch({type: 'setDictionaries', dictionaries: dictionaries});\n\n    }, []);\n\n    return (\n        <div id=\"base\" className=\"display-linebreak\">\n            <div className=\"style\">\n                <StyleSelector/>\n            </div>\n            <div className=\"style\">\n                <DictionarySelector/>\n            </div>\n            <Routes>\n                <Route key='1' path={`/${style}`} element={<Dictionary/>}/>\n                <Route path=\"\" element={<Navigate to={`${style}`}/>}/>\n            </Routes>\n        </div>);\n}\n\nexport default Base;","export const NARKAM = {\n    title: \"Беларускі тэхнічны пераклад\",\n    glossary: \"Гласарый\",\n    rules: \"Правілы\",\n    links: \"Спасылкі\",\n    pg: \"ст. \",\n    z: \" з \",\n    input_eng_term: \"увядзіце анг. тэрмін\",\n    back: \"Назад\",\n    term: \"Тэрмін\",\n    wrong_usage: \"Няправільнае ўжыванне\",\n    comment: \"Каментарый\",\n    narkam: \"narkam\",\n    tarask: \"tarask\",\n    lacink: \"lacink\",\n};","export const LACINK = {\n    title: \"Bielaruski techničny pieraklad\",\n    glossary: \"Hliasaryj\",\n    rules: \"Pravily\",\n    links: \"Spasylki\",\n    pg: \"st. \",\n    z: \" z \",\n    input_eng_term: \"uviadzicie anh. termin\",\n    back: \"Nazad\",\n    term: \"Termin\",\n    wrong_usage: \"Niapraviĺnaje ŭzyvańnie\",\n    comment: \"Kamentar\",\n    narkam: \"narkam\",\n    tarask: \"tarask\",\n    lacink: \"lacink\",\n};","export const TARASK = {\n    title: \"Беларускі тэхнічны пераклад\",\n    glossary: \"Глясарый\",\n    rules: \"Правілы\",\n    links: \"Спасылкі\",\n    pg: \"ст. \",\n    z: \" з \",\n    input_eng_term: \"увядзіце анг. тэрмін\",\n    back: \"Назад\",\n    term: \"Тэрмін\",\n    wrong_usage: \"Няправільнае ўжываньне\",\n    comment: \"Камэнтар\",\n    narkam: \"narkam\",\n    tarask: \"tarask\",\n    lacink: \"lacink\",\n};","import {createStore} from \"redux\";\nimport {LACINK_TAG, NARKAM_TAG, TARASK_TAG} from \"../base/constant\";\nimport {NARKAM} from \"../styles/narkam\";\nimport {LACINK} from \"../styles/lacink\";\nimport {TARASK} from \"../styles/tarask\";\n\nconst styleGuideMap = new Map();\nconst linksMap = new Map();\n\nconst styleReducer = (state = {\n    style: TARASK_TAG,\n    dictionaries: 'abc',\n    labels: TARASK,\n    ruleGroups: [],\n    linkGroups: [],\n    terms: [],\n    termsMap: new Map(),\n    unionMap: new Map()\n}, action) => {\n    if (action.type === NARKAM_TAG) {\n        return {\n            style: NARKAM_TAG,\n            dictionaries: state.dictionaries,\n            labels: NARKAM,\n            ruleGroups: styleGuideMap.get(action.type) ? styleGuideMap.get(action.type) : [],\n            linkGroups: linksMap.get(action.type) ? linksMap.get(action.type) : [],\n            terms: state.terms,\n            unionMap: state.unionMap,\n            termsMap: state.termsMap,\n        };\n    }\n    if (action.type === LACINK_TAG) {\n        return {\n            style: LACINK_TAG,\n            dictionaries: state.dictionaries,\n            labels: LACINK,\n            ruleGroups: styleGuideMap.get(action.type) ? styleGuideMap.get(action.type) : [],\n            linkGroups: linksMap.get(action.type) ? linksMap.get(action.type) : [],\n            terms: state.terms,\n            unionMap: state.unionMap,\n            termsMap: state.termsMap,\n        };\n    }\n    if (action.type === TARASK_TAG) {\n        return {\n            style: TARASK_TAG,\n            dictionaries: state.dictionaries,\n            labels: TARASK,\n            ruleGroups: styleGuideMap.get(action.type) ? styleGuideMap.get(action.type) : [],\n            linkGroups: linksMap.get(action.type) ? linksMap.get(action.type) : [],\n            terms: state.terms,\n            unionMap: state.unionMap,\n            termsMap: state.termsMap,\n        };\n    }\n\n    if (action.type === 'setDictionaries') {\n        return {\n            style: state.style,\n            dictionaries: action.dictionaries,\n            labels: state.labels,\n            ruleGroups: state.ruleGroups,\n            linkGroups: state.linkGroups,\n            terms: state.terms,\n            unionMap: state.unionMap,\n            termsMap: state.termsMap,\n        };\n    }\n\n    if (action.type === 'addTermsForStyleAndDictionary') {\n        state.termsMap.set(action.key, action.json);\n        return {\n            style: state.style,\n            dictionaries: state.dictionaries,\n            labels: state.labels,\n            ruleGroups: state.ruleGroups,\n            linkGroups: state.linkGroups,\n            terms: state.terms,\n            unionMap: state.unionMap,\n            termsMap: state.termsMap,\n        };\n    }\n\n    if (action.type === 'addUnionMap') {\n        let keys = [];\n        for (let key in action.unionMap) {\n            if (action.unionMap.hasOwnProperty(key)) {\n                state.unionMap.set(key, action.unionMap[key]);\n                keys.push(key);\n            }\n        }\n        return {\n            style: state.style,\n            dictionaries: state.dictionaries,\n            labels: state.labels,\n            ruleGroups: state.ruleGroups,\n            linkGroups: state.linkGroups,\n            terms: keys,\n            unionMap: state.unionMap,\n            termsMap: state.termsMap,\n        };\n    }\n\n    return state;\n\n};\n\nconst store = createStore(styleReducer);\n\nexport default store;\n","import ReactDOM from 'react-dom';\nimport Base from './base/Base';\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <Base/>\n        </Provider>\n    </BrowserRouter>\n    ,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}